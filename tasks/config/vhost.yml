---
## Apache2 Vhost create

- name: install | vhost | Validate arguments
  assert:
    that:
      - item.name

- name: install | vhost | Set vhost work variable
  set_fact:
    vhost: "{{ item }}"

- name: install | vhost | Set vhosts defaults vhost_root 
  set_fact:
    vhost: "{{ vhost | combine({'vhost_root': apache2__vhosts_defaults_vhost_root}) }}"
  when: vhost.vhost_root is not defined

- name: install | vhost | Set vhosts defaults username 
  set_fact:
    vhost: "{{ vhost | combine({'username': apache2__vhosts_defaults_username}) }}"
  when: vhost.username is not defined

- name: install | vhost | Set vhosts defaults document_root 
  set_fact:
    vhost: "{{ vhost | combine({'document_root': apache2__vhosts_defaults_vhost_root ~ '/' ~ vhost.name ~ '/htdocs'}) }}"
  when: vhost.document_root is not defined

- name: install | vhost | Set vhosts defaults log_root 
  set_fact:
    vhost: "{{ vhost | combine({'log_root': apache2__vhosts_defaults_vhost_root ~ '/' ~ vhost.name ~ '/logs'}) }}"
  when: vhost.log_root is not defined

- name: install | vhost | Set vhosts defaults vhost_filename 
  set_fact:
    vhost: "{{ vhost | combine({'vhost_filename': vhost.name}) }}"
  when: vhost.vhost_filename is not defined

- name: install | vhost | Set vhosts defaults port80_enforce_ssl 
  set_fact:
    vhost: "{{ vhost | combine({'port80_enforce_ssl': apache2__vhosts_defaults_port80_enforce_ssl}) }}"
  when: vhost.port80_enforce_ssl is not defined

- name: install | vhost | Set vhosts defaults enable_port443 
  set_fact:
    vhost: "{{ vhost | combine({'enable_port443': apache2__vhosts_defaults_enable_port443}) }}"
  when: vhost.enable_port443 is not defined


- name: install | vhost | Vhost parameters
  debug:
    msg: "{{ vhost }}"

- name: install | vhost | Create vhost group
  group:
    name: '{{ vhost.username }}'
    state: present
  when: vhost.username and vhost.username != 'root'

- name: install | vhost | Create vhost user
  user:
    name: '{{ vhost.username }}'
    shell: '/bin/bash'
    home: '{{ vhost.vhost_root }}/{{ vhost.name }}'
    create_home: False
    state: present
  when: vhost.username and vhost.username != 'root'

- name: install | vhost | Create vhost directory
  file:
    path: '{{ vhost.vhost_root }}/{{ vhost.name }}'
    owner: root
    group: '{{ vhost.username }}'
    mode: '0755'
    state: directory

- name: "install | vhost | Create vhost document_root directory"
  file:
    path: '{{ vhost.document_root }}'
    owner: '{{ vhost.username }}'
    group: '{{ vhost.username }}'
    mode: '0755'
    state: directory
  when: vhost.document_root

- name: install | vhost | Create vhost sessions directory
  file:
    path: '{{ vhost.vhost_root }}/{{ vhost.name }}/sessions'
    owner: '{{ vhost.username }}'
    group: '{{ vhost.username }}'
    mode: '0755'
    state: directory

- name: install | vhost | Create vhost files directory
  file:
    path: '{{ vhost.vhost_root }}/{{ vhost.name }}/files'
    owner: '{{ vhost.username }}'
    group: '{{ vhost.username }}'
    mode: '0755'
    state: directory

- name: install | vhost | Create vhost tmp directory
  file:
    path: '{{ vhost.vhost_root }}/{{ vhost.name }}/tmp'
    owner: '{{ vhost.username }}'
    group: '{{ vhost.username }}'
    mode: '0755'
    state: directory

- name: install | vhost | Create vhost logs directory
  file:
    path: '{{ vhost.log_root }}'
    owner: root
    group: '{{ vhost.username }}'
    mode: '0755'
    state: directory
  when: vhost.log_root

- name: install | vhost | Create vhost error.log
  file:
    path: '{{ vhost.log_root }}/error.log'
    owner: '{{ vhost.username }}'
    group: '{{ vhost.username }}'
    mode: '0644'
    state: touch
    modification_time: preserve
    access_time: preserve
  when: vhost.log_root

- name: install | vhost | Create vhost access.log
  file:
    path: '{{ vhost.log_root }}/access.log'
    owner: '{{ vhost.username }}'
    group: '{{ vhost.username }}'
    mode: '0644'
    state: touch
    modification_time: preserve
    access_time: preserve
  when: vhost.log_root

- name: install | vhost | Create vhost config
  template:
    src: sites/vhost_conf.j2
    dest: '{{ apache2__config_vhost_path }}/{{ vhost.vhost_filename }}.conf'
    owner: 'root'
    group: 'root'
    mode: 0644
  notify:
    - Test apache2 and reload

- name: install | vhost | Enable vhost config
  command: 
    cmd: /usr/sbin/a2ensite {{ vhost.vhost_filename }}
    creates: '{{ apache2__app_path }}/sites-enabled/{{ vhost.vhost_filename }}.conf'
  notify:
    - Test apache2 and reload
